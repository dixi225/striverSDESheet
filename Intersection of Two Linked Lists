import java.util.HashSet;

/****************************************************************

 Following is the class structure of the Node class:

 class Node {
     public int data;
     public Node next;

     Node()
     {
         this.data = 0;
         this.next = null;
     }
     Node(int data)
     {
         this.data = data;
         this.next = null;
     }
     Node(int data, Node next)
     {
         this.data = data;
         this.next = next;
     }
 }

 *****************************************************************/

public class Solution {
    public static int findIntersection(Node firstHead, Node secondHead) {
        //Write your code here
       int n1=0;
       int n2=0;
       Node head1=firstHead;
       Node head2=secondHead;
       while(head1!=null)
       {
           n1++;
           head1=head1.next;
       }
       while(head2!=null)
       {
           n2++;
           head2=head2.next;
       }
         if(n1==n2)
       {
           head1=firstHead;
           head2=secondHead;
           while(head1!=null&&head2!=null)
           {
               if(head1==head2) return head1.data;
               head1=head1.next;
               head2=head2.next;
           }
           return -1; 
       }
       int k;
       if(n1<n2)
       {
           head1=firstHead;
           head2=secondHead;
           k=n2-n1;
       }
       else{
           head2=firstHead;
           head1=secondHead;  
           k=n1-n2;         
       }
       int i=0;
       while(i<k)
       {
           head2=head2.next;
           i++;
       } 
       while(head1!=null)
       {
            if(head1==head2) return head1.data;
            head1=head1.next;
            head2=head2.next;
       }
       return -1;
    }
}
